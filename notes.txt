📃SMART CONTRACT📃
17/02/24
✅ Fungsi addUserAccount tidak bisa digunakan untuk update email di blockchain karena masih dapat mengakses akun melalui email lama --> fixed pakai mapping jadi email baru menggantikan email lama di map
✅ Solusinya, buat fungsi baru untuk memperbarui email sekaligus tambahkan field isActive = true ❌ tidak jadi pakai isActive untuk verifikasi email yang aktif karena bisa error
✅ Sebelum membuat menyimpan akun user dengan email baru tersebut, simpan dulu akun email user lama dengan isActive = false --> meskipun tetap dilakukan penggantian nilai isActive, pengecekan akun dengan email yg aktif tetap dilakukan dengan mengecek mapping email to address, isActive hanya tanda

18/02/24
✅ bikin role lengkap untuk pasien, petugas pendaftaran, perawat, dan dokter
✅ get jumlah akun by role sudah benar
✅ get seluruh akun by role sudah benar
✅ penanganan akun di smart contract sudah aman:
    1. email pada mapping akan terganti jika email mengganti email --> user tidak bisa signin dengan email lama
    2. satu address ewallet hanya dimapping kepada satu email --> harus dibuat peringatan bahwa email sudah pernah digunakan (handle dari backend)
    3. bisa menampilkan seluruh informasi akun by role (getAccountsByRole) dan jumlah akun by role (getNumberOfAccountsByRole) --> hanya menampilkan akun yang aktif berdasarkan mapping, bukan isActive
✅ bisa signup & signin dokter

19/02/24
❌ ga nyentuh smart contract

20/02/24
✅ handle update mapping di SC biar akun ga numpuk kalo pada addUserAccount akan numpuk. periksa di backend terkait penambahan profil, update profil, edit akun, dan soon to be data EMR1️

28/02/24
✅ admin, bisa add akun dokter, nurse, staff
✅ smart contract -> bikin function untuk get all account semua role, get all per role dan hapus akun dari array
✅ bermasalah update account info -> cek semua update username, phone, email, pass. kayanya masalah di smart contract updateuserusername [SOLVED]

09/03/24
✅ bikin updateUserAccount untuk update info akun secara keseluruhan
✅ UserAccount sekarang pakai CID bukan ipfsHash
✅ hapus updateUsername, updatePhone, updateEmail, updatePassword
✅ hapus ipfsAccount mapping dan array

10/03/24
✅ ada fungsi baru deactivateAccount() untuk delete akun
✅ delete hanya berupa soft delete --> isActive == false
✅ refactor SC agar tidak formatting otomatis
✅ bikin struct, array, dan mapping akun admin
✅ bikin rencana untuk penampungan doctor schedules
✅ array baru di smart contract untuk DoctorAccount()
✅ array baru di smart contract untuk NurseAccount()
✅ array baru di smart contract untuk StaffAccount()
✅ array baru di smart contract untuk AdminAccount()
✅ array baru untuk admin

11/03/24
✅ simpan doctor schedules di ipfs lalu simpan cid di blockchain (dari admin pakai akun admin)

next:
- pikirin appointment, apakah langsung di ipfs atau perlu store di blockchain sendiri

===================================================================================================
===================================================================================================

🖼️Frontend🖼️
17/02/24
✅ Semua input belum ada validasi jika input kosong (untuk fitur update akun: username, email, phone, pass)
✅ Terkait penggantian email berhubungan dengan smart contract

18/02/24
✅ bikin tampilan informasi akun dan profil dokter
✅ frontend navbar routing

19/02/24
✅ delete file yang tidak digunakan lagi:
    1. PatientData && DoctorData ==> UserData
    2. PatientIdentifier && DoctorIdentifier ==> tergabung di UserData
    3. PatientAccount && DoctorAccount ==> Account (global)
    4. PatientProfile && DoctorProfile ==> Profile (global)
    5. DoctorPatientList ==> NakesPatientList karena digunakan oleh doctor, nurse, dan staff
    6. backup-patient-account -> udah tidak relevan karena ada Account
✅ profile & account udah disatuin untuk semua user (jadi termasuk halaman global sekarang)
✅ halaman signup & signin semua role
✅ urusin tampilan role staff dan perawat (dashboard utama, profil, akun)
✅ patient                  == daftar rekam medis
   staff && nurse && doctor == daftar pasien

23/02/24
✅ fix handle auth dengan jwt kalo backend udah selesai
✅ persiapan bikin auth pake jwt --> handle session di frontend pakai sessionStorage
✅ validasi token di frontend
✅ auth pasien dan dokter udah aman untuk endpoint frontend: record-list, patient-list, profile, account
✅ bisa logout

25/02/24
✅ hilangkan signature metamask saat signup untuk mendukung pemilihan akun otomatis dari backend
✅ signup di frontend hanya kirim informasi dari form ke backend
✅ respon dari backend berupa informasi akun dan ditampilkan sebagai modal agar user bisa salin private key

26/02/24
✅ di signin bikin tombol modal untuk tutorial install ekstensi metamask sampai impor akun (InstallMetaMask)
✅ bikin tombol connect to ganache untuk metamask (MetaConnect)

27/02/24
✅ auth untuk nurse dan staff

28/02/24
✅ halaman admin (signin, dashboard, modal add new account)
✅ bikin dashboard admin sederhana, admin bisa daftarin akun dokter, nurse, staf
✅ dokter, nurse, staf nanti tinggal signin akunnya sudah dibuatkan dari admin
✅ session admin localStorage
✅ modal untuk update info akun setiap user (tapi ada bug, berkaitan sama ipfsHash)

09/03/24
✅ admin udah bisa add new dan edit user dengan baik
✅ data update dari admin sudah sama dengan dari user
✅ bikin single submit form untuk update akun user

10/03/24
✅ handle delete udah bisa, yg tampil di dashboard admin hanya isActive == true
✅ sign in admin pakai metamask connect ke SC baru yang nyimpen akun admin
✅ side menu untuk dahsboard dan jadwal dokter

11/03/24
✅ tabel jadwal dokter
✅ upload jadwal dokter (JSON)
✅ side menu dipisahkan menjadi parameter accounts dan schedules
✅ tampilkan data jadwal dokter menggunakan cid lalu ambil data dari ipfs di frontend

next:
- buat 2 tab, 1 tampilkan yg isActive == true, 1 tampilkan yg isActive == false
- handle state session / token jwt di frontend yg bagus (cari referensi best practice)
- pendaftaran rawat jalan (appointment) pasien

===================================================================================================
===================================================================================================

🔨Backend🔨
17/02/24
❌ persiapan bikin auth
❌ perisapan masuk ke pembuatan appointment (pengajuan rawat jalan)

18/02/24
✅ endpoint untuk signup & signin untuk pasien dan dokter
✅ dokter udah bisa update informasi akun dan menambah serta memperbarui profil dokter
✅ penyesuaian di API account, add-profile, dan update-profile agar lebih fleksibel terhadap banyak role

19/02/24
✅ persiapan file auth-middleware


20/02/24
✅ Endpoint sementara udah jalan semua untuk setiap role --> cek notion untuk daftar API

23/02./24
✅ auth dan auth-middleware sudah ada dan pada JWT token membawa address, email, dan role user
✅ bikin validasi/verifikasi jwt token
✅ auth untuk user udah aman --> validasi token di backend saat fetch
✅ endpoint backend yang sudah pakai authMiddleware: /account, /add-profile, /update-profile, dan seluruh update account

25/02/24
✅ logika signup baru agar dapat pilih akun ganache untuk user baru secara otomatis
✅ data akun disimpan di accounts.json
✅ mengembalikan private key agar user bisa impor akun ke metamask
✅ tetap ada pengecekan apakah email sudah pernah terdaftar atau akun telah digunakan sebelumnya
✅ pakai workspace ganache baru isi 100 akun new-dapp-emr

27/02/24
✅ auth untuk nurse dan staff aman

28/02/24
✅ update interaksi function smart contract (penambahan parameter)
✅ admin bisa login dan logout
✅ admin bisa add new account
✅ bikin logika admin CRUD untuk akun dokter, nurse, staf -> interaksi dengan smart contract
✅ endpoint semua admin udah ada di admin.js
✅ kalo admin butuh yang perlu signature, bisa pake private key di backend

09/03/24
✅ ganti fungsi untuk update akun, pakai fungsi smart contract updateUserAccount
✅ hilangkan semua kode dengan fungsi getIpfsByAddress, ipfsAccount, dan ipfsHash
✅ single action update account di admin
✅ single action update account di user

10/03/24
✅ ada endpoint baru /delete untuk soft delete di admin
✅ update endpoint sign in admin agar interaksi dengan SC menggunakan signature karena akun admin sudah lewat SC

11/03/24
✅ endpoint handle upload jadwal dokter
✅ simpan jadwal dokter ke ipfs, lalu simpan cid ke blockchain (JSON)
✅ hapus endpoint /schedule, sekarang pakai query parameter /dashboard?accounts=true dan /dashboard?schedules?true
✅ ambil jadwal dokter dengan getAllActiveDoctorSchedules()

next:
- appointment
- buat perbedaan endpoint untuk menampilkan akun dengan isActive == true dan false -> di frontend akan dipisah halamannya mungkin dengan tab
- perbagus validasi authMiddleware untuk semua endpoint backend
- perisapan masuk ke pembuatan appointment (pengajuan rawat jalan)
- endpoint appointment sisi pasien dan staff (post, get) --> perawat bisa signin dulu karena setiap pembuatan appointment akan otomatis assign dokter dan perawat random
- endpoint appointment sisi dokter dan perawat



✨✨ KNOWN BUGS ✨✨

A. Handle update account information dari sisi admin (frontend dan backend)
   problems:
   1. di modal edit informasi akun user, belum terimplementasi dengan baik validasi semua input
   ✅ 2. handle bagaimana jika ada input field yang tidak ingin user ganti -> saat ini masih null, tapi jadi tidak efektif di bagian vallidasi menggunakan Joi
   ✅ 3. saat melakukan update, misalnya username, data baru yang tersimpan hanyalah yang di ipfs. tapi ipfsHash itu sendiri tidak terupdate di blockchain dan username di blockchain juga tidak terupdate
   4. handle delete akun belum berfungsi
   5. berikan validasi lagi jika ingin edit atau delete akun user oleh admin -> misalnya, butuh input password atau kode khusus

   opsi solusi:
   1. periksa validasi input, pengolahan data baru, dan interaksi dengan function smart contract karena mungkin ada kesalahan teknis (backend)
   2. ganti pakai input form dari halaman akun user -> update masing2 per field, bisa gunakan endpoint updateAccount yang udah ada (frontend & backend)
   🎯3. buat function baru untuk dapat mengupdate informasi akun secara langsung dalam 1 function (smart contract & backend)

   spot:
   - masalah di updateIpfsHash() -> di admin entah kenapa kaya ga jalan, tapi kalo di update dari user bisa aman
   ✅- opsi, hilangkan addIpfsAccount, ganti menjadi cid saja langsung


abis ini ngapain:
