📃SMART CONTRACT📃

💡💡💡💡💡
public: Dapat diakses dari mana saja.
private: Hanya dapat diakses dari dalam kontrak yang mendeklarasikannya.
external: Hanya dapat diakses dari luar kontrak (termasuk kontrak lain).
internal: Dapat diakses dari dalam kontrak dan kontrak turunan.

17/02/24
✅ Fungsi addUserAccount tidak bisa digunakan untuk update email di blockchain karena masih dapat mengakses akun melalui email lama --> fixed pakai mapping jadi email baru menggantikan email lama di map
✅ Solusinya, buat fungsi baru untuk memperbarui email sekaligus tambahkan field isActive = true ❌ tidak jadi pakai isActive untuk verifikasi email yang aktif karena bisa error
✅ Sebelum menyimpan akun user dengan email baru tersebut, simpan dulu akun email user lama dengan isActive = false --> meskipun tetap dilakukan penggantian nilai isActive, pengecekan akun dengan email yg aktif tetap dilakukan dengan mengecek mapping email to address, isActive hanya tanda

18/02/24
✅ bikin role lengkap untuk pasien, petugas pendaftaran, perawat, dan dokter
✅ get jumlah akun by role sudah benar
✅ get seluruh akun by role sudah benar
✅ penanganan akun di smart contract sudah aman:
    1. email pada mapping akan terganti jika email mengganti email --> user tidak bisa signin dengan email lama
    2. satu address ewallet hanya dimapping kepada satu email --> harus dibuat peringatan bahwa email sudah pernah digunakan (handle dari backend)
    3. bisa menampilkan seluruh informasi akun by role (getAccountsByRole) dan jumlah akun by role (getNumberOfAccountsByRole) --> hanya menampilkan akun yang aktif berdasarkan mapping, bukan isActive
✅ bisa signup & signin dokter

19/02/24
❌ ga nyentuh smart contract

20/02/24
✅ handle update mapping di SC biar akun ga numpuk kalo pada addUserAccount akan numpuk. periksa di backend terkait penambahan profil, update profil, edit akun, dan soon to be data EMR1️

28/02/24
✅ admin, bisa add akun dokter, nurse, staff
✅ smart contract -> bikin function untuk get all account semua role, get all per role dan hapus akun dari array
✅ bermasalah update account info -> cek semua update username, phone, email, pass. kayanya masalah di smart contract updateuserusername [SOLVED]

09/03/24
✅ bikin updateUserAccount untuk update info akun secara keseluruhan
✅ UserAccount sekarang pakai CID bukan ipfsHash
✅ hapus updateUsername, updatePhone, updateEmail, updatePassword
✅ hapus ipfsAccount mapping dan array

10/03/24
✅ ada fungsi baru deactivateAccount() untuk delete akun
✅ delete hanya berupa soft delete --> isActive == false
✅ refactor SC agar tidak formatting otomatis
✅ bikin struct, array, dan mapping akun admin
✅ bikin rencana untuk penampungan doctor schedules
✅ array baru di smart contract untuk DoctorAccount()
✅ array baru di smart contract untuk NurseAccount()
✅ array baru di smart contract untuk StaffAccount()
✅ array baru di smart contract untuk AdminAccount()
✅ array baru untuk admin

11/03/24
✅ simpan doctor schedules di ipfs lalu simpan cid di blockchain (dari admin pakai akun admin)

12/03/24
✅ getLatestActiveDoctorSchedule() -> untuk sementara selalu ambil doctor schedule yang terbaru

13/03/24
❌ ga nyentuh smart contract

14/03/24
✅ implement OutpatientData struct dan beberapa function pendukung seperti di chatgpt

15/03/24
✅ rombak smart contract -> dipisah jadi 4 smart contract berdasarkan fungsi (AdminManagement, UserManagement, ScheduleManagement, OutpatientManagement)
✅ refactor smart contract -> perbaikan hak akses di banyak array, mapping, dan function
✅ update deploy.js untuk deploy 4 smart contract
✅ bisa getAll dan getBy address dari role tertentu

16/03/24
✅ perbaiki OutpatientManagement -> pemisahan mapping/array untuk patient, doctor, dan nurse
✅ bisa melakukan pemanggiland dari masing-masing akun dan role
✅ selalu addOutpatientData pada saat pembuatan appointment

17/03/24
✅ bisa get appointment by patient address dan ditampilkan di detail appointment

18/03/24
✅ bikin struct Patient untuk menampung profile pasien dan nomorRekamMedis (emrNumber) -> biar emrNumber ga terduplikat
✅ untuk pembuatan profil pasien baru harus cek di getAllPatients() -> cek nomorRekamMedis (emrNumber) kalo ada yang sama auto increment 1, baru setelah masuk ke UserAccount[] masukkan juga ke Patients[] pakai addPatient()

19/03/24
✅ penyesuaian schedule dokter, data pasien, dan data appointment yang diubah ke bahasa indonesia
✅ bikin struct, mapping, dan array untuk temporary patient data di staff

20/03/24
❌ ga nyentuh smart contract
✅ logika:
    ✅ data appointment punya struct, array, dan mapping masing-masing
    ✅ di dalamya ada nomorIdentitas pasien, address pasien, dokter, dan perawat -> saling terkoneksi
    ✅ bisa dipanggil dari masing-masing role
    ✅ harus terkait dengan data di array accountProfiles[] -> array records[]. gunakan nomorRekamMedis atau record_id untuk terhubung ke struct/array/mapping appointment

21/03/24
❌ ga nyentuh smart contract
❌ kayanya butuh getAppointmentsByStaff(), tapi coba akalin dulu tombol make appointment yang baru di frontend -> sepertinya ga perlu

22/03/24
✅ fix update appointment data function agar lebih efektif dalam memperbarui data appointment
✅ perbaikan function remove temporary data dari staff untuk menghapus data profil pasien temporal dari akun staff

26/03/24
✅ perbaikan smart contract outpatient dengan menambahkan emrNumber dan referensi patient address, doctor address, dan nurse address secara lengkap ke masing-masing role

next:
- penyesuaian smart contract lagi dalam pengembangan sisi dokter
- lanjut ke penerimaan appointment oleh nurse, lalu doctor -> berkaitan langsung dengan pengisian emr (TOPIK UTAMA)

===================================================================================================
===================================================================================================

🖼️Frontend🖼️
17/02/24
✅ Semua input belum ada validasi jika input kosong (untuk fitur update akun: username, email, phone, pass)
✅ Terkait penggantian email berhubungan dengan smart contract

18/02/24
✅ bikin tampilan informasi akun dan profil dokter
✅ frontend navbar routing

19/02/24
✅ delete file yang tidak digunakan lagi:
    1. PatientData && DoctorData ==> UserData
    2. PatientIdentifier && DoctorIdentifier ==> tergabung di UserData
    3. PatientAccount && DoctorAccount ==> Account (global)
    4. PatientProfile && DoctorProfile ==> Profile (global)
    5. DoctorPatientList ==> NakesPatientList karena digunakan oleh doctor, nurse, dan staff
    6. backup-patient-account -> udah tidak relevan karena ada Account
✅ profile & account udah disatuin untuk semua user (jadi termasuk halaman global sekarang)
✅ halaman signup & signin semua role
✅ urusin tampilan role staff dan perawat (dashboard utama, profil, akun)
✅ patient                  == daftar rekam medis
   staff && nurse && doctor == daftar pasien

23/02/24
✅ fix handle auth dengan jwt kalo backend udah selesai
✅ persiapan bikin auth pake jwt --> handle session di frontend pakai sessionStorage
✅ validasi token di frontend
✅ auth pasien dan dokter udah aman untuk endpoint frontend: record-list, patient-list, profile, account
✅ bisa logout

25/02/24
✅ hilangkan signature metamask saat signup untuk mendukung pemilihan akun otomatis dari backend
✅ signup di frontend hanya kirim informasi dari form ke backend
✅ respon dari backend berupa informasi akun dan ditampilkan sebagai modal agar user bisa salin private key

26/02/24
✅ di signin bikin tombol modal untuk tutorial install ekstensi metamask sampai impor akun (InstallMetaMask)
✅ bikin tombol connect to ganache untuk metamask (MetaConnect)

27/02/24
✅ auth untuk nurse dan staff

28/02/24
✅ halaman admin (signin, dashboard, modal add new account)
✅ bikin dashboard admin sederhana, admin bisa daftarin akun dokter, nurse, staf
✅ dokter, nurse, staf nanti tinggal signin akunnya sudah dibuatkan dari admin
✅ session admin localStorage
✅ modal untuk update info akun setiap user (tapi ada bug, berkaitan sama ipfsHash)

09/03/24
✅ admin udah bisa add new dan edit user dengan baik
✅ data update dari admin sudah sama dengan dari user
✅ bikin single submit form untuk update akun user

10/03/24
✅ handle delete udah bisa, yg tampil di dashboard admin hanya isActive == true
✅ sign in admin pakai metamask connect ke SC baru yang nyimpen akun admin
✅ side menu untuk dahsboard dan jadwal dokter

11/03/24
✅ tabel jadwal dokter
✅ upload jadwal dokter (JSON)
✅ side menu dipisahkan menjadi parameter accounts dan schedules
✅ tampilkan data jadwal dokter menggunakan cid lalu ambil data dari ipfs di frontend

12/03/24
✅ tabel jadwal dokter di admin sudah bagus (minimal sudah terbaca)

13/03/24
✅ tampilkan jadwal praktik dokter di modal buat appointment baru
⚒️ modal make new appointment on progres (pilih spesialisasi✅, pilih dokter✅, date & time picker✅)

14/03/24
✅ lanjut ke appointment -> modal buat appointment baru
✅ modal step pilih jadwal dokter: kurang di bagian pilih rumah sakit -> lalu cek lagi semuanya
✅ next step modal pilih pasien: ambil pasien yang dibawa dari PatientAppointment.jsx
✅ kirim tanggal dan waktu appointment yang dipilih dengan benar

15/03/24
✅ modal pembuatan appointment baru sudah bagus di frontend, sudah bisa kirim ke endpoint backend
✅ data sudah masuk ke backend dan masuk ke ipfs dan smart contract
✅ sudah bisa getAll OutpatientData di halaman appointment

16/03/24
✅ data udah bisa tampil ke frontend dalam bentuk card list appointment, tapi masih berantakan
✅ bikin komponen AppointmentList menggantikan RecordList

17/03/24
✅ AppointmentList berubah menjadi AppointmentCardList -> kalo diklik menuju /details
✅ halaman detail appointment menampilkan informasi appointment outpatient yang telah dibuat pasien

18/03/24
✅ di pembuatan profil pasien ada tambahan Select cabang rumah sakit terdekat (Data Rumah Sakit)
✅ pembuatan user dropdown di halaman appointment untuk pilih pasien
✅ perbaiki list appointment agar menampilkan sesuai dengan user yg dipilih
✅ perbaikan di halaman detail appointment agar lebih simpel dan akurat

19/03/24
✅ ubah data schedule dan appointment ke bahasa indonesia, dan data pasien kembali ke bahasa indonesia juga
✅ perbaikan pembuatan appointment -> cek nomorRekamMedis, idDokter, dan idJadwal sebelum membuat appointment agar pasien tidak bisa membuat appointment yang sama persis lebih dari 1 kali
✅ lanjut ke bagian staff -> patient list -> bisa cari pasien lewat modal (pakai address dan nomorRekamMedis)
✅ ada 2 tombol, 1 untuk cek ketersediaan profil pasien, 1 lagi untuk menambahkan profil pasien tersebut ke akun staff (sementara/temporary)
✅ bisa kirim data ke backend untuk save ke temporary patient data di SC -> masih error⚠️

20/03/24
✅ berhasil post dan get appointment dari staff
✅ menampilkan data patient appointment di staff dalam tabel
✅ menambahkan aksi detail yang mengarahkan ke halaman Data Pendaftaran Rawat Jalan pasien terkait
✅ persiapan pembuatan tombol untuk membuat appointment dari staff
✅ perbaikan tombol 'kembali' (BackButton) agar kembali ke halaman sebelumnya dengan benar

21/03/24
✅ pembuatan modal pendaftaran appointment dari staff -> tiru MakeAppointment tetapi sesuaikan dengan data yang dapat dikirim dari PatientList di staff
✅ perbaikan penampilan data di patient list staf -> harusnya hanya tampil daftar pasien saja -> setelah pasien diklik baru tampil di halaman selanjutnya daftar appointment dari pasien tersebut
✅ jadi sekarang pada /patient-list hanya tampil daftar pasien, lalu masuk ke /patient-list/patient-details, di dalamnya ada card profil pasien dan table appointment list -> kalo diklik muncul modal appointment info
✅ ada tombol back
✅ penyesuaian endpoint di frontend App.jsx

22/03/24
✅ tombol batalkan appointment / handle cancel sudah bekerja di patient dan staff
✅ perubahan warna tag status
✅ perubahan uuidv4 ke nanoid
✅ update state status sudah bisa tapi belum efektif

23/03/24 - 24/03/24
✅ pemisahan endpoint untuk appointment yang menggunakan useNavigate -> ada bug state status appointment setelah cancel
✅ hilangkan tombol aksi detail pada patient list untuk membuat halaman profile dan appointment
✅ buat tombol aksi lihat di patient list
✅ profile pasien di staff menjadi modal instead of halaman baru
✅ appointment list di staff jadi menu tersendiri, data disajikan dalam tabel
✅ tersedia tombol aksi lihat di appointment list untuk membatalkan appointment
✅ pembuatan appointment oleh staff
✅ terdapat tombol buat appointment baru
✅ sudah auto reload setelah buat dan cancel appointment
✅ menggunakan sessionStorage untuk userData dan profiles
✅ sorting appointment list
✅ penyempurnaan tag, appointment card list, table dari sisi pasien dan staff
✅ tampilan status di appointment card list

26/03/24
✅ dashboard dokter sudah bisa menampilkan daftar pasien pasien dokter terkait

27/03/24
✅ bikin halaman baru untuk menampilkan profil pasien, appointment, dan emr
✅ perbaikan penerimaan data karena ada update struktur data pasien
✅ modal detail profil pasien sudah bisa diakses

28/03/24
✅ card pembuatan emr sudah berhasil, form sudah baik tapi belum bisa upload files
✅ pengiriman data form ke backend sudah bisa

next:
- perbaiki penanganan upload file -> masih gagal
- cek ketiga komponen (card detail profil, tabel appointment, dan card emr) agar berfungsi dengan baik dan tampilannya bagus
- cek appointment dari dokter dan nurse
- buat 2 tab, 1 tampilkan yg isActive == true, 1 tampilkan yg isActive == false
- handle state session / token jwt di frontend yg bagus (cari referensi best practice)

===================================================================================================
===================================================================================================

🔨Backend🔨
17/02/24
❌ persiapan bikin auth
❌ perisapan masuk ke pembuatan appointment (pengajuan rawat jalan)

18/02/24
✅ endpoint untuk signup & signin untuk pasien dan dokter
✅ dokter udah bisa update informasi akun dan menambah serta memperbarui profil dokter
✅ penyesuaian di API account, add-profile, dan update-profile agar lebih fleksibel terhadap banyak role

19/02/24
✅ persiapan file auth-middleware

20/02/24
✅ Endpoint sementara udah jalan semua untuk setiap role --> cek notion untuk daftar API

23/02./24
✅ auth dan auth-middleware sudah ada dan pada JWT token membawa address, email, dan role user
✅ bikin validasi/verifikasi jwt token
✅ auth untuk user udah aman --> validasi token di backend saat fetch
✅ endpoint backend yang sudah pakai authMiddleware: /account, /add-profile, /update-profile, dan seluruh update account

25/02/24
✅ logika signup baru agar dapat pilih akun ganache untuk user baru secara otomatis
✅ data akun disimpan di accounts.json
✅ mengembalikan private key agar user bisa impor akun ke metamask
✅ tetap ada pengecekan apakah email sudah pernah terdaftar atau akun telah digunakan sebelumnya
✅ pakai workspace ganache baru isi 100 akun new-dapp-emr

27/02/24
✅ auth untuk nurse dan staff aman

28/02/24
✅ update interaksi function smart contract (penambahan parameter)
✅ admin bisa login dan logout
✅ admin bisa add new account
✅ bikin logika admin CRUD untuk akun dokter, nurse, staf -> interaksi dengan smart contract
✅ endpoint semua admin udah ada di admin.js
✅ kalo admin butuh yang perlu signature, bisa pake private key di backend

09/03/24
✅ ganti fungsi untuk update akun, pakai fungsi smart contract updateUserAccount
✅ hilangkan semua kode dengan fungsi getIpfsByAddress, ipfsAccount, dan ipfsHash
✅ single action update account di admin
✅ single action update account di user

10/03/24
✅ ada endpoint baru /delete untuk soft delete di admin
✅ update endpoint sign in admin agar interaksi dengan SC menggunakan signature karena akun admin sudah lewat SC

11/03/24
✅ endpoint handle upload jadwal dokter
✅ simpan jadwal dokter ke ipfs, lalu simpan cid ke blockchain (JSON)
✅ hapus endpoint /schedule, sekarang pakai query parameter /dashboard?accounts=true dan /dashboard?schedules?true
✅ ambil jadwal dokter dengan getAllActiveDoctorSchedules()

13/03/24
✅ endpoint get doctor schedule untuk pasien -> di halaman appointment (modal)

14/03/24
✅ endpoint untuk add new appointment dari modal frontend

15/03/24
✅ koneksi ke smart contract addNewAppointment(), terhubung ke dokter dan perawat terkait
✅ OutpatientData dari blockchain sudah bisa dikirim ke frontend tinggal ditampilkan dalam bentuk appointment/Outpatient list
✅ refactor semua yang berkaitan dengan backend karena ada perubahan cara consume function SC (akibat pemisahan SC jadi 4 SC terpisah -> deploynya juga terpisah)

16/03/24
✅ perbaikan handle pada /appointment untuk dapat menampilkan scheduleData dan appointmentData ke frontend

17/03/24
❌ ga nyentuh backend

18/03/24
✅ di addProfile buat function baru generateNomorRekamMedis() untuk generate 10 digit nomorRekamMedis -> dicek menggunakan getAllPatients() -> auto increment
✅ menambahkan rumahSakitAsal di profile pasien

19/03/24
✅ perubahan variable ke bahasa indonesia -> appointment (SELURUHNYA) -> biar konsisten dengan di profil
✅ membuat file baru staff.js untuk kelola aktivitas staff
✅ staff punya 2 endpoint utama -> 1) /check-patient-appointment, 2) /add-patient-appointment
⚠️ /add-patient-appointment masih error

20/03/24
✅ fix endpoint /add-patient-appointment di staff.js
✅ bikin endpoint baru /patient-appointment di staff.js untuk get patient profiles yang ditambahkan ke akun staf

21/03/24
✅ penyesuaian api /patient-list agar bisa provide data yang dibutuhkan di daftar profil pasien, data profil pasien, dan daftar appointment

22/03/24
✅ handle cancel udah bisa oleh patient dan staff

23/03/24 - 24/03/24
✅ rework semua penggunaan useNavigate di staff untuk perpindahan dari patient list ke appointment list
✅ ganti endpoint /patient-details ke /patient-appointments
✅ staff sudah bisa buat appointment untuk pasien
✅ pemisahan endpoint appointment -> hindari useNavigate baik di patient dan staff (ada bug karena sulit update state status setelah perubahan data cancel appointment)
✅ pembuatan appointment oleh staff
✅ endpoint appointment sisi pasien dan staff (post, get) --> perawat bisa signin dulu karena setiap pembuatan appointment akan otomatis assign dokter dan perawat random

26/03/24
✅ buat router doctor sendiri
✅ bisa get outpatient by doctor address

27/03/24
✅ buat endpoint untuk halaman yang bisa menampilkan profil pasien, appointment, dan emr
✅ perbaikan struktur data pasien agar dapat melakukan filter riwayatPengobatan (EMR)

28/03/24
✅ sudah ada endpoint untuk post emr

next:
- pembuatan emr dari dokter terkait (pengambilan data profil pasien terkait, penyimpanan data emr ke riwayatPengobatan (plus files), penyimpanan ke ipfs, penyimpanan ke blockchain, nyatakan appointment selesai, tampilkan appointment selesai, tampilkan emr selesai)
- pengecekan keandalan pembuatan emr
- endpoint appointment sisi dokter dan perawat
- validasi data pembuatan appointment
- buat perbedaan endpoint untuk menampilkan akun dengan isActive == true dan false -> di frontend akan dipisah halamannya mungkin dengan tab (admin)
- perbagus validasi authMiddleware untuk semua endpoint backend


TERKAIT PEMBUATAN APPOINTMENT / RAWAT JALAN
1. lanjutkan penyimpanan appointment seperti yang sekarang sudah berjalan (menyimpan ke ipfs, lalu disimpan ke struct dan array mandiri di blockchain)
2. selanjutnya akan terkoneksi dengan EMR pasien yang berada pada objek suatu pasien di array accountProfiles di array UserAccount di blockchain


✨✨ KNOWN BUGS ✨✨

A. Handle update account information dari sisi admin (frontend dan backend)
   problems:
   1. di modal edit informasi akun user, belum terimplementasi dengan baik validasi semua input
   ✅ 2. handle bagaimana jika ada input field yang tidak ingin user ganti -> saat ini masih null, tapi jadi tidak efektif di bagian vallidasi menggunakan Joi
   ✅ 3. saat melakukan update, misalnya username, data baru yang tersimpan hanyalah yang di ipfs. tapi ipfsHash itu sendiri tidak terupdate di blockchain dan username di blockchain juga tidak terupdate
   4. handle delete akun belum berfungsi
   5. berikan validasi lagi jika ingin edit atau delete akun user oleh admin -> misalnya, butuh input password atau kode khusus

   opsi solusi:
   1. periksa validasi input, pengolahan data baru, dan interaksi dengan function smart contract karena mungkin ada kesalahan teknis (backend)
   2. ganti pakai input form dari halaman akun user -> update masing2 per field, bisa gunakan endpoint updateAccount yang udah ada (frontend & backend)
   🎯3. buat function baru untuk dapat mengupdate informasi akun secara langsung dalam 1 function (smart contract & backend)

   spot:
   - masalah di updateIpfsHash() -> di admin entah kenapa kaya ga jalan, tapi kalo di update dari user bisa aman
   ✅- opsi, hilangkan addIpfsAccount, ganti menjadi cid saja langsung


abis ini ngapain:
✅ optimasi smart contract dulu -> pisahin admin, dll
✅ test 4 smart contract baru
✅ struktur data appointment
✅ appointment relasi dengan doctor_data dan doctor_schedules
✅ penyimpanan jadwal appointment di patient dan doctor
✅ tampilin data appointment yang udah dibuat di frontend dalam bentuk card list
✅ perbaiki jika pasien bikin appointment yang sama persis lebih dari sekali
✅ tes ulang proses appointment
✅ tampilan patient list di staf menjadi -> daftar pasien dulu, baru setelah salah satu pasien diklik muncul halaman baru yang isinya daftar appointment, nanti appointment diklik muncul popup info appointment
✅ compile SC baru, deploy, pake
✅ ganti uuidv4 jadi nanoid
✅ handle cancel appointment
✅ fix bug di handle cancel appointment
✅ pemisahan endpoint untuk menghindari penggunaan useNavigate
✅ penggunaan context provider dan usenavigate di staff gagal -> rombak ganti pakai useState dan useEffect dan endpoint mandiri
✅ implementasi remove temporary profile pasien dari staff -> sediakan tombol cancel
✅ pembuatan appointment oleh staff
- penerimaan appointment oleh nurse dan dokter


🟡 logika penerimaan appointment dari nurse dan dokter: 🟡
- manfaatkan getAppointmentsByNurse() dan getAppointmentsByDoctor() untuk mendapatkan appointment yang terkait dengan perawat dan dokter tersebut
- perawat akan mengecek profil pasien (termasuk melihat riwayat pengobatan (EMR)) dan pengajuan rawat jalan (cek userData dan appointmentData)
- perawat mengisikan informasi awal pemeriksaan (bb, tb, keluhan, dll.) -> pembuatan data pemeriksaan -> masuk ke array 'pengobatan' -> berarti update objek dan cid profil pada struct, array, dan mapping pasien pada akun terkait (update cid updateUserAccount())
- perawat simpan -> sementara
- dokter melakukan hal yg sama dengan perawwat tadi -> isian dari perawat bisa diedit dokter juga
- dokter simpan permanen